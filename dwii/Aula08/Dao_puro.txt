npm install mysql


//database.js - classe

const mysql = require('mysql');

const connection = mysql.createConnection({
  host: 'localhost',
  user: 'root',
  password: 'senha',
  database: 'nomedobanco'
});

connection.connect((err) => {
  if (err) {
    console.error('Erro ao conectar ao banco de dados: ', err);
    return;
  }
  console.log('Conexão estabelecida com o banco de dados');
});

module.exports = connection;

--------fim-----------------------

//user-dao.js - classe
const connection = require('./database');

function getAllUsers(callback) {
  connection.query('SELECT * FROM users', (error, results, fields) => {
    if (error) {
      callback(error, null);
    } else {
      callback(null, results);
    }
  });
}

function getUserById(id, callback) {
  connection.query('SELECT * FROM users WHERE id = ?', [id], (error, results, fields) => {
    if (error) {
      callback(error, null);
    } else {
      callback(null, results[0]);
    }
  });
}

function addUser(user, callback) {
  connection.query('INSERT INTO users SET ?', user, (error, results, fields) => {
    if (error) {
      callback(error, null);
    } else {
      callback(null, results.insertId);
    }
  });
}

function updateUser(id, user, callback) {
  connection.query('UPDATE users SET ? WHERE id = ?', [user, id], (error, results, fields) => {
    if (error) {
      callback(error, null);
    } else {
      callback(null, results.affectedRows);
    }
  });
}

function deleteUser(id, callback) {
  connection.query('DELETE FROM users WHERE id = ?', [id], (error, results, fields) => {
    if (error) {
      callback(error, null);
    } else {
      callback(null, results.affectedRows);
    }
  });
}

module.exports = {
  getAllUsers,
  getUserById,
  addUser,
  updateUser,
  deleteUser
};
------------------fim---------------

//database.js - classe

Esse arquivo exporta funções que recebem um callback como parâmetro para retornar os resultados das operações de CRUD. Cada função utiliza a conexão com o banco de dados exportada pelo arquivo database.js para executar as consultas SQL.

Por fim, podemos utilizar essas funções em nosso arquivo principal:

const userDao = require('./user-dao');

userDao.getAllUsers((err, users) => {
  if (err) {
    console.error('Erro ao buscar usuários: ', err);
  } else {
    console.log('Lista de usuários: ', users);
  }
});

userDao.getUserById(1, (err, user) => {
  if (err) {
    console.error('Erro ao buscar usuário
    
    
----------------fim-----------------------